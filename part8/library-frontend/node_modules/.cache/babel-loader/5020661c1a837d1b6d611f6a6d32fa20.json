{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const ALL_AUTHORS = gql`\n  query {\n    allAuthors {\n      name\n      born\n      bookCount\n      id\n      authorOf\n    }\n  }\n`;\nexport const BOOK_ADDED = gql`\n  subscription {\n    bookAdded {\n      genres\n      published\n      title\n      author {\n        name\n        born\n      }\n      id\n    }\n  }\n`;\nexport const ME = gql`\n  query {\n    me {\n      username\n      favoriteGenre\n      id\n    }\n  }\n`;\nexport const LOGIN = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      value\n    }\n  }\n`;\nexport const CREATE_BOOK = gql`\n  mutation createBook($author: String!, $published: Int!, $title: String!, $genres: [String!]!) {\n    addBook (\n      title: $title,\n      author: $author,\n      published: $published,\n      genres: $genres,\n    ) {\n      author {\n        name\n        born\n      }\n      published\n      title\n      genres\n      id\n    }\n  }\n`;\nexport const ALL_BOOKS = gql`\n  query {\n    allBooks {\n      author {\n        name\n        born\n      }\n      published\n      title\n      genres\n      id\n    }\n  }\n`;\nexport const UPDATE_BORN = gql`\n  mutation updateBorn($name: String!, $born: Int!) {\n    editAuthor (\n      name: $name,\n      setBornTo: $born\n    ) {\n      name\n      born\n      bookCount\n      id\n    }\n  }\n`;","map":{"version":3,"sources":["C:/Users/ryanw/github/fullstackopen2019/part8/library-frontend/src/queries.js"],"names":["gql","ALL_AUTHORS","BOOK_ADDED","ME","LOGIN","CREATE_BOOK","ALL_BOOKS","UPDATE_BORN"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AAEA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;CAAxB;AAYP,OAAO,MAAME,UAAU,GAAGF,GAAI;;;;;;;;;;;;;CAAvB;AAeP,OAAO,MAAMG,EAAE,GAAGH,GAAI;;;;;;;;CAAf;AAUP,OAAO,MAAMI,KAAK,GAAGJ,GAAI;;;;;;CAAlB;AAOP,OAAO,MAAMK,WAAW,GAAGL,GAAI;;;;;;;;;;;;;;;;;;CAAxB;AAoBP,OAAO,MAAMM,SAAS,GAAGN,GAAI;;;;;;;;;;;;;CAAtB;AAeP,OAAO,MAAMO,WAAW,GAAGP,GAAI;;;;;;;;;;;;CAAxB","sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const ALL_AUTHORS = gql`\r\n  query {\r\n    allAuthors {\r\n      name\r\n      born\r\n      bookCount\r\n      id\r\n      authorOf\r\n    }\r\n  }\r\n`\r\n\r\nexport const BOOK_ADDED = gql`\r\n  subscription {\r\n    bookAdded {\r\n      genres\r\n      published\r\n      title\r\n      author {\r\n        name\r\n        born\r\n      }\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ME = gql`\r\n  query {\r\n    me {\r\n      username\r\n      favoriteGenre\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`\r\nexport const CREATE_BOOK = gql`\r\n  mutation createBook($author: String!, $published: Int!, $title: String!, $genres: [String!]!) {\r\n    addBook (\r\n      title: $title,\r\n      author: $author,\r\n      published: $published,\r\n      genres: $genres,\r\n    ) {\r\n      author {\r\n        name\r\n        born\r\n      }\r\n      published\r\n      title\r\n      genres\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_BOOKS = gql`\r\n  query {\r\n    allBooks {\r\n      author {\r\n        name\r\n        born\r\n      }\r\n      published\r\n      title\r\n      genres\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_BORN = gql`\r\n  mutation updateBorn($name: String!, $born: Int!) {\r\n    editAuthor (\r\n      name: $name,\r\n      setBornTo: $born\r\n    ) {\r\n      name\r\n      born\r\n      bookCount\r\n      id\r\n    }\r\n  }\r\n`\r\n"]},"metadata":{},"sourceType":"module"}