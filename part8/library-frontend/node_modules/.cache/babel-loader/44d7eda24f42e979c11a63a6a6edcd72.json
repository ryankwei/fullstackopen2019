{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanw\\\\github\\\\fullstackopen2019\\\\part8\\\\library-frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Authors from './components/Authors';\nimport Books from './components/Books';\nimport NewBook from './components/NewBook';\nimport LoginForm from './components/LoginForm';\nimport Recommend from './components/Recommend';\nimport { useApolloClient, useSubscription } from '@apollo/client';\nimport { ALL_BOOKS, BOOK_ADDED, ALL_AUTHORS } from './queries';\n\nconst App = () => {\n  const [page, setPage] = useState('authors');\n  const [token, setToken] = useState(localStorage.getItem('user-token'));\n  const client = useApolloClient();\n\n  const updateCacheWith = newBook => {\n    const includedIn = (set, object) => set.map(p => p.id).includes(object.id);\n\n    const dataInStore = client.readQuery({\n      query: ALL_BOOKS\n    });\n    const dataInStore_Authors = client.readQuery({\n      query: ALL_AUTHORS\n    });\n\n    if (!includedIn(dataInStore.allBooks, newBook)) {\n      client.writeQuery({\n        query: ALL_BOOKS,\n        data: { ...dataInStore,\n          allBooks: dataInStore.allBooks.concat(newBook)\n        }\n      });\n      client.writeQuery({\n        query: ALL_AUTHORS\n      });\n    }\n  };\n\n  useSubscription(BOOK_ADDED, {\n    onSubscriptionData: ({\n      subscriptionData\n    }) => {\n      const newBook = subscriptionData.data.bookAdded;\n      window.alert(`New Book ${newBook.title} has been added`);\n      updateCacheWith(newBook);\n    }\n  });\n\n  const logout = () => {\n    setToken(null);\n    localStorage.clear();\n    client.resetStore();\n    setPage('authors');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setPage('authors'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"button\", {\n    onClick: () => setPage('books'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"books\"), token && React.createElement(\"button\", {\n    onClick: () => setPage('add'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"add book\"), token && React.createElement(\"button\", {\n    onClick: () => logout(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"logout\"), !token && React.createElement(\"button\", {\n    onClick: () => setPage('login'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"login\"), token && React.createElement(\"button\", {\n    onClick: () => setPage('recommend'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"recommend\")), React.createElement(Authors, {\n    show: page === 'authors',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Books, {\n    show: page === 'books',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(NewBook, {\n    show: page === 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(LoginForm, {\n    show: page === 'login',\n    setToken: data => {\n      setToken(data);\n      setPage('authors');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Recommend, {\n    show: page === 'recommend',\n    token: token,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ryanw/github/fullstackopen2019/part8/library-frontend/src/App.js"],"names":["React","useState","Authors","Books","NewBook","LoginForm","Recommend","useApolloClient","useSubscription","ALL_BOOKS","BOOK_ADDED","ALL_AUTHORS","App","page","setPage","token","setToken","localStorage","getItem","client","updateCacheWith","newBook","includedIn","set","object","map","p","id","includes","dataInStore","readQuery","query","dataInStore_Authors","allBooks","writeQuery","data","concat","onSubscriptionData","subscriptionData","bookAdded","window","alert","title","logout","clear","resetStore"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport Authors from './components/Authors'\r\nimport Books from './components/Books'\r\nimport NewBook from './components/NewBook'\r\nimport LoginForm from './components/LoginForm'\r\nimport Recommend from './components/Recommend'\r\nimport { useApolloClient, useSubscription } from '@apollo/client'\r\nimport { ALL_BOOKS, BOOK_ADDED, ALL_AUTHORS } from './queries'\r\nconst App = () => {\r\n  const [page, setPage] = useState('authors')\r\n  const [token, setToken] = useState(localStorage.getItem('user-token'))\r\n  const client = useApolloClient()\r\n\r\n  const updateCacheWith = (newBook) => {\r\n    const includedIn = (set, object) => set.map(p=>p.id).includes(object.id)\r\n\r\n    const dataInStore = client.readQuery({ query: ALL_BOOKS })\r\n    const dataInStore_Authors = client.readQuery({ query: ALL_AUTHORS })\r\n    if(!includedIn(dataInStore.allBooks, newBook)) {\r\n      client.writeQuery({\r\n        query: ALL_BOOKS,\r\n        data: { ...dataInStore, allBooks : dataInStore.allBooks.concat(newBook) }\r\n      })\r\n      client.writeQuery({ query: ALL_AUTHORS })\r\n    }\r\n  }\r\n\r\n  useSubscription(BOOK_ADDED, {\r\n    onSubscriptionData: ({ subscriptionData }) => {\r\n      const newBook = subscriptionData.data.bookAdded\r\n      window.alert(`New Book ${newBook.title} has been added`)\r\n      updateCacheWith(newBook)\r\n    }\r\n  })\r\n\r\n  const logout = () => {\r\n    setToken(null)\r\n    localStorage.clear()\r\n    client.resetStore()\r\n    setPage('authors')\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setPage('authors')}>authors</button>\r\n        <button onClick={() => setPage('books')}>books</button>\r\n        {token && <button onClick={() => setPage('add')}>add book</button>}\r\n        {token && <button onClick={() => logout()}>logout</button>}\r\n        {!token && <button onClick={()=> setPage('login')}>login</button>}\r\n        {token && <button onClick={()=> setPage('recommend')}>recommend</button>}\r\n      </div>\r\n\r\n      <Authors\r\n        show={page === 'authors'}\r\n      />\r\n\r\n      <Books\r\n        show={page === 'books'}\r\n      />\r\n\r\n      <NewBook\r\n        show={page === 'add'}\r\n      />\r\n\r\n      <LoginForm\r\n        show={page === 'login'}\r\n        setToken={(data)=>{ setToken(data); setPage('authors') }}\r\n      />\r\n\r\n      <Recommend\r\n        show={page === 'recommend'}\r\n        token={token}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}