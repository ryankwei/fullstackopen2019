{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanw\\\\github\\\\fullstackopen2019\\\\part8\\\\library-frontend\\\\src\\\\components\\\\Recommend.js\";\nimport React, { useState } from 'react';\nimport { ALL_BOOKS, ME } from '../queries';\nimport { useLazyQuery, useQuery } from '@apollo/client';\n\nconst Recommend = props => {\n  const [getBooks, result] = useLazyQuery(ALL_BOOKS);\n  const userRes = useQuery(ME);\n  useEffect(() => {\n    if (result.called && result.networkStatus > 6 && result.data && result.data.allBooks) {\n      setBooks(result.data.allBooks);\n\n      if (selectedGenre === 'all genres') {\n        let genres = ['all genres'];\n\n        for (let book of result.data.allBooks) {\n          for (let genre of book.genres) {\n            if (!genres.includes(genre)) genres = genres.concat(genre);\n          }\n        }\n\n        setGenresList(genres);\n      }\n    }\n  }, [result]);\n\n  if (userRes.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const filter = userRes.data.me.favoriteGenre;\n  const res = getBooks({\n    variables: {\n      genre: filter\n    }\n  });\n  console.log(res);\n\n  if (res.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const books = res.data.allBooks;\n\n  if (!props.show) {\n    return null;\n  }\n\n  const bookRow = book => React.createElement(\"tr\", {\n    key: book.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, book.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, book.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, book.published));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"books\"), \"books in your favorite genre \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, filter), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"published\")), books.map(book => bookRow(book)))));\n};\n\nexport default Recommend;","map":{"version":3,"sources":["C:/Users/ryanw/github/fullstackopen2019/part8/library-frontend/src/components/Recommend.js"],"names":["React","useState","ALL_BOOKS","ME","useLazyQuery","useQuery","Recommend","props","getBooks","result","userRes","useEffect","called","networkStatus","data","allBooks","setBooks","selectedGenre","genres","book","genre","includes","concat","setGenresList","loading","filter","me","favoriteGenre","res","variables","console","log","books","show","bookRow","title","author","name","published","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { ALL_BOOKS, ME } from '../queries'\r\nimport { useLazyQuery, useQuery } from '@apollo/client'\r\nconst Recommend = (props) => {\r\n  const [getBooks, result] = useLazyQuery(ALL_BOOKS)\r\n  const userRes = useQuery(ME)\r\n\r\n  useEffect(() => {\r\n    if(result.called && result.networkStatus > 6 && result.data && result.data.allBooks) {\r\n      setBooks(result.data.allBooks)\r\n      if(selectedGenre === 'all genres') {\r\n        let genres = ['all genres']\r\n        for ( let book of result.data.allBooks ) {\r\n          for ( let genre of book.genres ) {\r\n            if(!genres.includes(genre))\r\n              genres = genres.concat(genre)\r\n          }\r\n        }\r\n        setGenresList(genres)\r\n      }\r\n    }\r\n  }, [result])\r\n\r\n  if( userRes.loading ) {\r\n    return (\r\n      <div>loading...</div>\r\n    )\r\n  }\r\n  const filter = userRes.data.me.favoriteGenre\r\n  const res = getBooks({ variables: { genre: filter }})\r\n  console.log(res)\r\n  if(res.loading) {\r\n    return (\r\n      <div>loading...</div>\r\n    )\r\n  }\r\n  const books = res.data.allBooks\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  const bookRow = (book) => (\r\n    <tr key={book.title}>\r\n      <td>{book.title}</td>\r\n      <td>{book.author.name}</td>\r\n      <td>{book.published}</td>\r\n    </tr>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n      books in your favorite genre <b>{filter}</b>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {books.map(book =>\r\n            bookRow(book)\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recommend\r\n"]},"metadata":{},"sourceType":"module"}