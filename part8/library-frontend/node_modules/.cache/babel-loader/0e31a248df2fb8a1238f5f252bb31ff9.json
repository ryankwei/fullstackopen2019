{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanw\\\\github\\\\fullstackopen2019\\\\part8\\\\library-frontend\\\\src\\\\components\\\\Authors.js\";\nimport { UPDATE_BORN, ALL_AUTHORS } from '../queries';\nimport React, { useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\n\nconst Authors = props => {\n  const [name, setName] = useState(null);\n  const [born, setBorn] = useState(null);\n  const [updateBorn] = useMutation(UPDATE_BORN, {\n    refetchQueries: [{\n      query: ALL_AUTHORS\n    }]\n  });\n\n  const newBorn = async event => {\n    event.preventDefault();\n    updateBorn({\n      variables: {\n        born,\n        name\n      }\n    });\n    setName(null);\n    setBorn(null);\n  };\n\n  const res = useQuery(ALL_AUTHORS);\n  const authors = res.data.allPersons;\n\n  if (!props.show) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"authors\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"born\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"books\")), authors.map(a => React.createElement(\"tr\", {\n    key: a.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, a.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, a.born), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, a.bookCount))))), React.createElement(\"form\", {\n    onSubmit: newBorn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"name\", React.createElement(\"input\", {\n    value: name,\n    onChange: ({\n      target\n    }) => setName(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"born\", React.createElement(\"input\", {\n    value: born,\n    onChange: ({\n      target\n    }) => setBorn(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n};\n\nexport default Authors;","map":{"version":3,"sources":["C:/Users/ryanw/github/fullstackopen2019/part8/library-frontend/src/components/Authors.js"],"names":["UPDATE_BORN","ALL_AUTHORS","React","useState","useMutation","useQuery","Authors","props","name","setName","born","setBorn","updateBorn","refetchQueries","query","newBorn","event","preventDefault","variables","res","authors","data","allPersons","show","map","a","bookCount","target","value"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,YAAzC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAAES,UAAF,IAAiBR,WAAW,CAACJ,WAAD,EAAe;AAC/Ca,IAAAA,cAAc,EAAE,CAAE;AAAEC,MAAAA,KAAK,EAAEb;AAAT,KAAF;AAD+B,GAAf,CAAlC;;AAIA,QAAMc,OAAO,GAAG,MAAOC,KAAP,IAAiB;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEAL,IAAAA,UAAU,CAAC;AACTM,MAAAA,SAAS,EAAE;AAAER,QAAAA,IAAF;AAAQF,QAAAA;AAAR;AADF,KAAD,CAAV;AAIAC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GATD;;AAWA,QAAMQ,GAAG,GAAGd,QAAQ,CAACJ,WAAD,CAApB;AACA,QAAMmB,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,UAAzB;;AAEA,MAAI,CAACf,KAAK,CAACgB,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CADF,EAUGH,OAAO,CAACI,GAAR,CAAYC,CAAC,IACZ;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACjB,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKiB,CAAC,CAACjB,IAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKiB,CAAC,CAACf,IAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKe,CAAC,CAACC,SAAP,CAHF,CADD,CAVH,CADF,CAFF,EAsBE;AAAM,IAAA,QAAQ,EAAEX,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AACE,IAAA,KAAK,EAAEP,IADT;AAEE,IAAA,QAAQ,EAAE,CAAC;AAAEmB,MAAAA;AAAF,KAAD,KAAgBlB,OAAO,CAACkB,MAAM,CAACC,KAAR,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEE;AACE,IAAA,KAAK,EAAElB,IADT;AAEE,IAAA,QAAQ,EAAE,CAAC;AAAEiB,MAAAA;AAAF,KAAD,KAAgBhB,OAAO,CAACgB,MAAM,CAACC,KAAR,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARF,CAtBF,CADF;AAyCD,CAlED;;AAoEA,eAAetB,OAAf","sourcesContent":["import { UPDATE_BORN, ALL_AUTHORS } from '../queries'\r\nimport React, { useState } from 'react'\r\nimport { useMutation, useQuery } from '@apollo/client'\r\nconst Authors = (props) => {\r\n  const [name, setName] = useState(null)\r\n  const [born, setBorn] = useState(null)\r\n  const [ updateBorn ] = useMutation(UPDATE_BORN,  {\r\n    refetchQueries: [ { query: ALL_AUTHORS }]\r\n  })\r\n\r\n  const newBorn = async (event) => {\r\n    event.preventDefault()\r\n\r\n    updateBorn({\r\n      variables: { born, name }\r\n    })\r\n\r\n    setName(null)\r\n    setBorn(null)\r\n  }\r\n\r\n  const res = useQuery(ALL_AUTHORS)\r\n  const authors = res.data.allPersons\r\n\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>authors</h2>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              born\r\n            </th>\r\n            <th>\r\n              books\r\n            </th>\r\n          </tr>\r\n          {authors.map(a =>\r\n            <tr key={a.name}>\r\n              <td>{a.name}</td>\r\n              <td>{a.born}</td>\r\n              <td>{a.bookCount}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <form onSubmit={newBorn}>\r\n        <div>\r\n          name\r\n          <input\r\n            value={name}\r\n            onChange={({ target }) => setName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          born\r\n          <input\r\n            value={born}\r\n            onChange={({ target }) => setBorn(target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Authors\r\n"]},"metadata":{},"sourceType":"module"}