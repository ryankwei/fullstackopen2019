{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryanw\\\\github\\\\fullstackopen2019\\\\part8\\\\library-frontend\\\\src\\\\components\\\\Books.js\";\nimport React, { useState } from 'react';\nimport { ALL_BOOKS } from '../queries';\nimport { useQuery } from '@apollo/client';\n\nconst Books = props => {\n  const res = useQuery(ALL_BOOKS);\n  const filter = useState('all genres');\n\n  if (res.loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n  const books = res.data.allBooks;\n\n  if (!props.show) {\n    return null;\n  }\n\n  const genres = ['all genres'];\n\n  for (let book of books) {\n    for (let genre of books.genres) genres.concat(genre);\n  }\n\n  console.log(genre);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"books\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"published\")), books.map(a => React.createElement(\"tr\", {\n    key: a.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, a.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, a.author.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, a.published))))));\n};\n\nexport default Books;","map":{"version":3,"sources":["C:/Users/ryanw/github/fullstackopen2019/part8/library-frontend/src/components/Books.js"],"names":["React","useState","ALL_BOOKS","useQuery","Books","props","res","filter","loading","books","data","allBooks","show","genres","book","genre","concat","console","log","map","a","title","author","name","published"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,GAAG,GAAGH,QAAQ,CAACD,SAAD,CAApB;AACA,QAAMK,MAAM,GAAGN,QAAQ,CAAC,YAAD,CAAvB;;AACA,MAAGK,GAAG,CAACE,OAAP,EAAgB;AACd,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGD;;AACD,QAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASC,QAAvB;;AACA,MAAI,CAACN,KAAK,CAACO,IAAX,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,QAAMC,MAAM,GAAG,CAAC,YAAD,CAAf;;AACA,OAAM,IAAIC,IAAV,IAAkBL,KAAlB,EAA0B;AACxB,SAAM,IAAIM,KAAV,IAAmBN,KAAK,CAACI,MAAzB,EACEA,MAAM,CAACG,MAAP,CAAcD,KAAd;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,EAUGN,KAAK,CAACU,GAAN,CAAUC,CAAC,IACV;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACC,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,CAAC,CAACE,MAAF,CAASC,IAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,CAAC,CAACI,SAAP,CAHF,CADD,CAVH,CADF,CAHF,CADF;AA0BD,CA5CD;;AA8CA,eAAepB,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { ALL_BOOKS } from '../queries'\r\nimport { useQuery } from '@apollo/client'\r\nconst Books = (props) => {\r\n  const res = useQuery(ALL_BOOKS)\r\n  const filter = useState('all genres')\r\n  if(res.loading) {\r\n    return (\r\n      <div>loading...</div>\r\n    )\r\n  }\r\n  const books = res.data.allBooks\r\n  if (!props.show) {\r\n    return null\r\n  }\r\n  const genres = ['all genres']\r\n  for ( let book of books ) {\r\n    for ( let genre of books.genres )\r\n      genres.concat(genre)\r\n  }\r\n  console.log(genre)\r\n  return (\r\n    <div>\r\n      <h2>books</h2>\r\n\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <th></th>\r\n            <th>\r\n              author\r\n            </th>\r\n            <th>\r\n              published\r\n            </th>\r\n          </tr>\r\n          {books.map(a =>\r\n            <tr key={a.title}>\r\n              <td>{a.title}</td>\r\n              <td>{a.author.name}</td>\r\n              <td>{a.published}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Books\r\n"]},"metadata":{},"sourceType":"module"}